name: Rust

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - 'binding/rust/**'
      - '!binding/rust/README.md'
      - 'lib/linux/**'
      - 'lib/mac/**'
      - 'lib/raspberry-pi/**'
      - 'lib/windows/**'
      - '.github/workflows/rust.yml'
  pull_request:
    branches: [ main, 'v[0-9]+.[0-9]+' ]
    paths:
      - 'binding/rust/**'
      - '!binding/rust/README.md'
      - 'lib/linux/**'
      - 'lib/mac/**'
      - 'lib/raspberry-pi/**'
      - 'lib/windows/**'
      - '.github/workflows/rust.yml'

env:
  SDL_AUDIODRIVER: "disk"

defaults:
  run:
    working-directory: binding/rust

jobs:
  build-github-hosted:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Rust dependencies
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt install libasound2-dev -y

    - name: Rust pre-build
      run: bash copy.sh

    - name: Build
      run: cargo build --verbose

    - name: Test
      run: cargo test --release

  build-self-hosted:
    runs-on: ${{ matrix.machine }}

    strategy:
      matrix:
        machine: [rpi3-32, rpi3-64, rpi4-32, rpi4-64, rpi5-32, rpi5-64, pv-windows, pv-windows-arm64, pv-ios]

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Rust pre-build
      if: matrix.machine != 'pv-windows' && matrix.machine != 'pv-windows-arm64'
      run: bash copy.sh

    - name: Rust pre-build windows
      if: matrix.machine == 'pv-windows' || matrix.machine == 'pv-windows-arm64'
      run: |
        New-Item -Path "." -Name "data" -ItemType "directory"
        New-Item -Path ".\data" -Name "lib" -ItemType "directory"
        Copy-Item -Path "..\..\lib\windows" -Destination ".\data\lib" -Recurse

    - name: Build
      run: cargo build --verbose

    - name: Test
      run: cargo test --release
